generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model admin_users {
  user_id           Int     @id @default(autoincrement())
  administration_id Int     @default(0)
  user_name         String  @db.VarChar(20)
  user_password     String  @db.VarChar(255)
  user_avatar       String? @db.VarChar(255)
}

model client_users {
  id          Int      @default(autoincrement())
  user_idp    String   @db.VarChar(32)
  create_time DateTime @db.DateTime(0)

  @@id([id, user_idp])
}

model mj_articles {
  article_id              Int       @id @default(autoincrement())
  type_id                 Int
  article_title           String    @db.VarChar(255)
  article_content         String    @db.LongText
  article_comment_count   Int?      @default(0)
  create_time             DateTime  @db.DateTime(0)
  update_time             DateTime? @db.DateTime(0)
  article_like_count      Int?      @default(0)
  article_read_count      Int       @default(1)
  article_weight          Int?      @default(0)
  article_cover           String?   @db.VarChar(255)
  is_dfat                 Int       @default(0)
  article_content_preview String?   @db.VarChar(100)
  type                    type_list @relation(fields: [type_id], references: [id])

  @@index([type_id], map: "mj_articles_type_id_fkey")
}

model type_list {
  id           Int           @id @default(autoincrement())
  type_name_en String        @db.VarChar(255)
  type_name    String        @db.VarChar(255)
  mj_articles  mj_articles[]
}

model user_comments {
  comment_id        Int      @id @default(autoincrement())
  user_idp          String   @db.VarChar(255)
  article_id        Int
  create_time       DateTime @db.DateTime(0)
  comment_content   String   @db.VarChar(1000)
  parent_comment_id Int?
  like_count        Int      @default(0)
  comment_email     String?  @db.VarChar(255)
  status            Int?     @default(1)
  short_time_name   String   @db.VarChar(12)
  is_admin          Int      @default(0)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model pc_users {
  user_id          Int    @id @default(autoincrement())
  user_idp         String @unique(map: "user_ip") @db.VarChar(255)
  like_article_ids Json?
  like_comment_ids Json?
}
